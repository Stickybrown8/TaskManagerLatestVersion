{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\n// Types\n\n// État initial\nconst initialState = {\n  isAuthenticated: false,\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: false,\n  error: null\n};\n\n// Slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.loading = false;\n      state.error = null;\n      localStorage.setItem('token', action.payload.token);\n    },\n    loginFailure: (state, action) => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.loading = false;\n      state.error = action.payload;\n    },\n    logout: state => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n      localStorage.removeItem('token');\n    },\n    updateUserProfile: (state, action) => {\n      if (state.user) {\n        state.user = {\n          ...state.user,\n          ...action.payload\n        };\n      }\n    },\n    updateUserGamification: (state, action) => {\n      if (state.user && state.user.gamification) {\n        state.user.gamification = {\n          ...state.user.gamification,\n          ...action.payload\n        };\n      }\n    }\n  }\n});\n\n// Actions\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  updateUserProfile,\n  updateUserGamification\n} = authSlice.actions;\n\n// Reducer\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isAuthenticated","user","token","localStorage","getItem","loading","error","authSlice","name","reducers","loginStart","state","loginSuccess","action","payload","setItem","loginFailure","logout","removeItem","updateUserProfile","updateUserGamification","gamification","actions","reducer"],"sources":["C:/Users/Steve/Documents/Dernier projet task manager/task-manager-complete-main (1)/task-manager-complete-main/frontend/src/store/slices/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\n// Types\ninterface AuthState {\n  isAuthenticated: boolean;\n  user: User | null;\n  token: string | null;\n  loading: boolean;\n  error: string | null;\n}\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  profile: {\n    avatar: string;\n    theme: string;\n    settings: {\n      notifications: boolean;\n      language: string;\n      soundEffects: boolean;\n    };\n  };\n  gamification: {\n    level: number;\n    experience: number;\n    actionPoints: number;\n    badges: any[];\n  };\n}\n\ninterface LoginPayload {\n  user: User;\n  token: string;\n}\n\n// État initial\nconst initialState: AuthState = {\n  isAuthenticated: false,\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: false,\n  error: null,\n};\n\n// Slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action: PayloadAction<LoginPayload>) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.loading = false;\n      state.error = null;\n      localStorage.setItem('token', action.payload.token);\n    },\n    loginFailure: (state, action: PayloadAction<string>) => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.loading = false;\n      state.error = action.payload;\n    },\n    logout: (state) => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n      localStorage.removeItem('token');\n    },\n    updateUserProfile: (state, action: PayloadAction<Partial<User>>) => {\n      if (state.user) {\n        state.user = { ...state.user, ...action.payload };\n      }\n    },\n    updateUserGamification: (state, action: PayloadAction<Partial<User['gamification']>>) => {\n      if (state.user && state.user.gamification) {\n        state.user.gamification = { ...state.user.gamification, ...action.payload };\n      }\n    },\n  },\n});\n\n// Actions\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  updateUserProfile,\n  updateUserGamification,\n} = authSlice.actions;\n\n// Reducer\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;;AAE7D;;AAmCA;AACA,MAAMC,YAAuB,GAAG;EAC9BC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACpCC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,SAAS,GAAGT,WAAW,CAAC;EAC5BU,IAAI,EAAE,MAAM;EACZT,YAAY;EACZU,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,OAAO,GAAG,IAAI;MACpBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDM,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAmC,KAAK;MAC5DF,KAAK,CAACX,eAAe,GAAG,IAAI;MAC5BW,KAAK,CAACV,IAAI,GAAGY,MAAM,CAACC,OAAO,CAACb,IAAI;MAChCU,KAAK,CAACT,KAAK,GAAGW,MAAM,CAACC,OAAO,CAACZ,KAAK;MAClCS,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;MAClBH,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEF,MAAM,CAACC,OAAO,CAACZ,KAAK,CAAC;IACrD,CAAC;IACDc,YAAY,EAAEA,CAACL,KAAK,EAAEE,MAA6B,KAAK;MACtDF,KAAK,CAACX,eAAe,GAAG,KAAK;MAC7BW,KAAK,CAACV,IAAI,GAAG,IAAI;MACjBU,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDG,MAAM,EAAGN,KAAK,IAAK;MACjBA,KAAK,CAACX,eAAe,GAAG,KAAK;MAC7BW,KAAK,CAACV,IAAI,GAAG,IAAI;MACjBU,KAAK,CAACT,KAAK,GAAG,IAAI;MAClBC,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;IAClC,CAAC;IACDC,iBAAiB,EAAEA,CAACR,KAAK,EAAEE,MAAoC,KAAK;MAClE,IAAIF,KAAK,CAACV,IAAI,EAAE;QACdU,KAAK,CAACV,IAAI,GAAG;UAAE,GAAGU,KAAK,CAACV,IAAI;UAAE,GAAGY,MAAM,CAACC;QAAQ,CAAC;MACnD;IACF,CAAC;IACDM,sBAAsB,EAAEA,CAACT,KAAK,EAAEE,MAAoD,KAAK;MACvF,IAAIF,KAAK,CAACV,IAAI,IAAIU,KAAK,CAACV,IAAI,CAACoB,YAAY,EAAE;QACzCV,KAAK,CAACV,IAAI,CAACoB,YAAY,GAAG;UAAE,GAAGV,KAAK,CAACV,IAAI,CAACoB,YAAY;UAAE,GAAGR,MAAM,CAACC;QAAQ,CAAC;MAC7E;IACF;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EACXJ,UAAU;EACVE,YAAY;EACZI,YAAY;EACZC,MAAM;EACNE,iBAAiB;EACjBC;AACF,CAAC,GAAGb,SAAS,CAACe,OAAO;;AAErB;AACA,eAAef,SAAS,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}