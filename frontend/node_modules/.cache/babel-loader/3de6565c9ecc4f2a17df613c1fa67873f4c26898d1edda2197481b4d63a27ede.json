{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';// Types\n// État initial\nconst initialState={tasks:[],currentTask:null,filteredTasks:[],filters:{},loading:false,error:null};// Slice\nconst tasksSlice=createSlice({name:'tasks',initialState,reducers:{fetchTasksStart:state=>{state.loading=true;state.error=null;},fetchTasksSuccess:(state,action)=>{state.tasks=action.payload;state.filteredTasks=applyFilters(action.payload,state.filters);state.loading=false;},fetchTasksFailure:(state,action)=>{state.loading=false;state.error=action.payload;},fetchTaskStart:state=>{state.loading=true;state.error=null;},fetchTaskSuccess:(state,action)=>{state.currentTask=action.payload;state.loading=false;},fetchTaskFailure:(state,action)=>{state.loading=false;state.error=action.payload;},createTaskStart:state=>{state.loading=true;state.error=null;},createTaskSuccess:(state,action)=>{state.tasks.push(action.payload);state.filteredTasks=applyFilters(state.tasks,state.filters);state.loading=false;},createTaskFailure:(state,action)=>{state.loading=false;state.error=action.payload;},updateTaskStart:state=>{state.loading=true;state.error=null;},updateTaskSuccess:(state,action)=>{const index=state.tasks.findIndex(task=>task._id===action.payload._id);if(index!==-1){state.tasks[index]=action.payload;}if(state.currentTask&&state.currentTask._id===action.payload._id){state.currentTask=action.payload;}state.filteredTasks=applyFilters(state.tasks,state.filters);state.loading=false;},updateTaskFailure:(state,action)=>{state.loading=false;state.error=action.payload;},deleteTaskStart:state=>{state.loading=true;state.error=null;},deleteTaskSuccess:(state,action)=>{state.tasks=state.tasks.filter(task=>task._id!==action.payload);if(state.currentTask&&state.currentTask._id===action.payload){state.currentTask=null;}state.filteredTasks=applyFilters(state.tasks,state.filters);state.loading=false;},deleteTaskFailure:(state,action)=>{state.loading=false;state.error=action.payload;},setTaskFilters:(state,action)=>{state.filters=action.payload;state.filteredTasks=applyFilters(state.tasks,action.payload);},clearTaskFilters:state=>{state.filters={};state.filteredTasks=[...state.tasks];},clearCurrentTask:state=>{state.currentTask=null;}}});// Fonction utilitaire pour appliquer les filtres\nconst applyFilters=(tasks,filters)=>{return tasks.filter(task=>{// Filtre par statut\nif(filters.status&&task.status!==filters.status){return false;}// Filtre par client\nif(filters.clientId&&task.clientId!==filters.clientId){return false;}// Filtre par catégorie\nif(filters.category&&task.category!==filters.category){return false;}// Filtre par priorité\nif(filters.priority&&task.priority!==filters.priority){return false;}// Filtre par date d'échéance\nif(filters.dueDate){const dueDate=new Date(task.dueDate);const filterDate=new Date(filters.dueDate);if(dueDate.getFullYear()!==filterDate.getFullYear()||dueDate.getMonth()!==filterDate.getMonth()||dueDate.getDate()!==filterDate.getDate()){return false;}}return true;});};// Actions\nexport const{fetchTasksStart,fetchTasksSuccess,fetchTasksFailure,fetchTaskStart,fetchTaskSuccess,fetchTaskFailure,createTaskStart,createTaskSuccess,createTaskFailure,updateTaskStart,updateTaskSuccess,updateTaskFailure,deleteTaskStart,deleteTaskSuccess,deleteTaskFailure,setTaskFilters,clearTaskFilters,clearCurrentTask}=tasksSlice.actions;// Reducer\nexport default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","tasks","currentTask","filteredTasks","filters","loading","error","tasksSlice","name","reducers","fetchTasksStart","state","fetchTasksSuccess","action","payload","applyFilters","fetchTasksFailure","fetchTaskStart","fetchTaskSuccess","fetchTaskFailure","createTaskStart","createTaskSuccess","push","createTaskFailure","updateTaskStart","updateTaskSuccess","index","findIndex","task","_id","updateTaskFailure","deleteTaskStart","deleteTaskSuccess","filter","deleteTaskFailure","setTaskFilters","clearTaskFilters","clearCurrentTask","status","clientId","category","priority","dueDate","Date","filterDate","getFullYear","getMonth","getDate","actions","reducer"],"sources":["C:/Users/Steve/Documents/Dernier projet task manager/task-manager-complete-main (1)/task-manager-complete-main/frontend/src/store/slices/tasksSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\n// Types\ninterface Task {\n  _id: string;\n  clientId: string;\n  title: string;\n  description: string;\n  category: 'campagne' | 'landing' | 'rapport' | 'email' | 'reunion' | 'tracking' | 'cro';\n  priority: 'basse' | 'moyenne' | 'haute' | 'urgente';\n  status: 'à faire' | 'en cours' | 'terminée';\n  createdAt: string;\n  dueDate: string;\n  completedAt?: string;\n  actionPoints: number;\n  recurring?: {\n    isRecurring: boolean;\n    frequency?: 'quotidien' | 'hebdomadaire' | 'mensuel';\n    interval?: number;\n    endDate?: string;\n  };\n  reminders?: {\n    time: string;\n    sent: boolean;\n  }[];\n  subtasks?: {\n    title: string;\n    completed: boolean;\n    completedAt?: string;\n  }[];\n  attachments?: {\n    name: string;\n    url: string;\n    type: string;\n    size: number;\n  }[];\n  history?: {\n    action: string;\n    timestamp: string;\n    details: any;\n  }[];\n}\n\ninterface TasksState {\n  tasks: Task[];\n  currentTask: Task | null;\n  filteredTasks: Task[];\n  filters: {\n    status?: string;\n    clientId?: string;\n    category?: string;\n    priority?: string;\n    dueDate?: string;\n  };\n  loading: boolean;\n  error: string | null;\n}\n\n// État initial\nconst initialState: TasksState = {\n  tasks: [],\n  currentTask: null,\n  filteredTasks: [],\n  filters: {},\n  loading: false,\n  error: null,\n};\n\n// Slice\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    fetchTasksStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchTasksSuccess: (state, action: PayloadAction<Task[]>) => {\n      state.tasks = action.payload;\n      state.filteredTasks = applyFilters(action.payload, state.filters);\n      state.loading = false;\n    },\n    fetchTasksFailure: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    fetchTaskStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchTaskSuccess: (state, action: PayloadAction<Task>) => {\n      state.currentTask = action.payload;\n      state.loading = false;\n    },\n    fetchTaskFailure: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    createTaskStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    createTaskSuccess: (state, action: PayloadAction<Task>) => {\n      state.tasks.push(action.payload);\n      state.filteredTasks = applyFilters(state.tasks, state.filters);\n      state.loading = false;\n    },\n    createTaskFailure: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    updateTaskStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    updateTaskSuccess: (state, action: PayloadAction<Task>) => {\n      const index = state.tasks.findIndex(task => task._id === action.payload._id);\n      if (index !== -1) {\n        state.tasks[index] = action.payload;\n      }\n      if (state.currentTask && state.currentTask._id === action.payload._id) {\n        state.currentTask = action.payload;\n      }\n      state.filteredTasks = applyFilters(state.tasks, state.filters);\n      state.loading = false;\n    },\n    updateTaskFailure: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    deleteTaskStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    deleteTaskSuccess: (state, action: PayloadAction<string>) => {\n      state.tasks = state.tasks.filter(task => task._id !== action.payload);\n      if (state.currentTask && state.currentTask._id === action.payload) {\n        state.currentTask = null;\n      }\n      state.filteredTasks = applyFilters(state.tasks, state.filters);\n      state.loading = false;\n    },\n    deleteTaskFailure: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    setTaskFilters: (state, action: PayloadAction<TasksState['filters']>) => {\n      state.filters = action.payload;\n      state.filteredTasks = applyFilters(state.tasks, action.payload);\n    },\n    clearTaskFilters: (state) => {\n      state.filters = {};\n      state.filteredTasks = [...state.tasks];\n    },\n    clearCurrentTask: (state) => {\n      state.currentTask = null;\n    },\n  },\n});\n\n// Fonction utilitaire pour appliquer les filtres\nconst applyFilters = (tasks: Task[], filters: TasksState['filters']) => {\n  return tasks.filter(task => {\n    // Filtre par statut\n    if (filters.status && task.status !== filters.status) {\n      return false;\n    }\n    \n    // Filtre par client\n    if (filters.clientId && task.clientId !== filters.clientId) {\n      return false;\n    }\n    \n    // Filtre par catégorie\n    if (filters.category && task.category !== filters.category) {\n      return false;\n    }\n    \n    // Filtre par priorité\n    if (filters.priority && task.priority !== filters.priority) {\n      return false;\n    }\n    \n    // Filtre par date d'échéance\n    if (filters.dueDate) {\n      const dueDate = new Date(task.dueDate);\n      const filterDate = new Date(filters.dueDate);\n      \n      if (\n        dueDate.getFullYear() !== filterDate.getFullYear() ||\n        dueDate.getMonth() !== filterDate.getMonth() ||\n        dueDate.getDate() !== filterDate.getDate()\n      ) {\n        return false;\n      }\n    }\n    \n    return true;\n  });\n};\n\n// Actions\nexport const {\n  fetchTasksStart,\n  fetchTasksSuccess,\n  fetchTasksFailure,\n  fetchTaskStart,\n  fetchTaskSuccess,\n  fetchTaskFailure,\n  createTaskStart,\n  createTaskSuccess,\n  createTaskFailure,\n  updateTaskStart,\n  updateTaskSuccess,\n  updateTaskFailure,\n  deleteTaskStart,\n  deleteTaskSuccess,\n  deleteTaskFailure,\n  setTaskFilters,\n  clearTaskFilters,\n  clearCurrentTask,\n} = tasksSlice.actions;\n\n// Reducer\nexport default tasksSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}