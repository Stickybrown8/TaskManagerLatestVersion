{"ast":null,"code":"import axios from'axios';// URL de base de l'API (votre backend sur Render)\nconst API_URL='https://task-manager-api-yx13.onrender.com/api';// Configuration d'axios avec le token d'authentification\nconst setAuthToken=token=>{if(token){axios.defaults.headers.common['x-auth-token']=token;}else{delete axios.defaults.headers.common['x-auth-token'];}};// Service d'authentification\nconst authService={login:async(email,password)=>{try{const response=await axios.post(`${API_URL}/auth/login`,{email,password});const{token,user}=response.data;// Stocker le token dans le localStorage\nlocalStorage.setItem('token',token);// Configurer axios avec le token\nsetAuthToken(token);return user;}catch(error){console.error('Erreur de connexion:',error);throw error;}},logout:()=>{// Supprimer le token du localStorage\nlocalStorage.removeItem('token');// Supprimer le token des en-têtes axios\nsetAuthToken(null);},checkAuth:async()=>{// Vérifier si un token existe dans le localStorage\nconst token=localStorage.getItem('token');if(!token){return null;}try{// Configurer axios avec le token\nsetAuthToken(token);// Vérifier si le token est valide\nconst response=await axios.get(`${API_URL}/auth/user`);return response.data;}catch(error){console.error('Erreur de vérification d\\'authentification:',error);// Si le token est invalide, déconnecter l'utilisateur\nauthService.logout();return null;}}};// Service des clients\nconst clientsService={getClients:async()=>{try{const response=await axios.get(`${API_URL}/clients`);return response.data;}catch(error){console.error('Erreur lors de la récupération des clients:',error);throw error;}},getClient:async id=>{try{const response=await axios.get(`${API_URL}/clients/${id}`);return response.data;}catch(error){console.error(`Erreur lors de la récupération du client ${id}:`,error);throw error;}}};// Service des tâches\nconst tasksService={getTasks:async()=>{try{const response=await axios.get(`${API_URL}/tasks`);return response.data;}catch(error){console.error('Erreur lors de la récupération des tâches:',error);throw error;}},getTask:async id=>{try{const response=await axios.get(`${API_URL}/tasks/${id}`);return response.data;}catch(error){console.error(`Erreur lors de la récupération de la tâche ${id}:`,error);throw error;}}};export{authService,clientsService,tasksService,setAuthToken};","map":{"version":3,"names":["axios","API_URL","setAuthToken","token","defaults","headers","common","authService","login","email","password","response","post","user","data","localStorage","setItem","error","console","logout","removeItem","checkAuth","getItem","get","clientsService","getClients","getClient","id","tasksService","getTasks","getTask"],"sources":["C:/Users/Steve/Documents/Dernier projet task manager/task-manager-complete-main (1)/task-manager-complete-main/frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\n// URL de base de l'API (votre backend sur Render)\nconst API_URL = 'https://task-manager-api-yx13.onrender.com/api';\n\n// Configuration d'axios avec le token d'authentification\nconst setAuthToken = (token)  => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\n// Service d'authentification\nconst authService = {\n  login: async (email, password) => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, { email, password });\n      const { token, user } = response.data;\n      \n      // Stocker le token dans le localStorage\n      localStorage.setItem('token', token);\n      \n      // Configurer axios avec le token\n      setAuthToken(token);\n      \n      return user;\n    } catch (error) {\n      console.error('Erreur de connexion:', error);\n      throw error;\n    }\n  },\n  \n  logout: () => {\n    // Supprimer le token du localStorage\n    localStorage.removeItem('token');\n    \n    // Supprimer le token des en-têtes axios\n    setAuthToken(null);\n  },\n  \n  checkAuth: async () => {\n    // Vérifier si un token existe dans le localStorage\n    const token = localStorage.getItem('token');\n    \n    if (!token) {\n      return null;\n    }\n    \n    try {\n      // Configurer axios avec le token\n      setAuthToken(token);\n      \n      // Vérifier si le token est valide\n      const response = await axios.get(`${API_URL}/auth/user`);\n      return response.data;\n    } catch (error) {\n      console.error('Erreur de vérification d\\'authentification:', error);\n      \n      // Si le token est invalide, déconnecter l'utilisateur\n      authService.logout();\n      return null;\n    }\n  }\n};\n\n// Service des clients\nconst clientsService = {\n  getClients: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/clients`);\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des clients:', error);\n      throw error;\n    }\n  },\n  \n  getClient: async (id) => {\n    try {\n      const response = await axios.get(`${API_URL}/clients/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la récupération du client ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\n// Service des tâches\nconst tasksService = {\n  getTasks: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/tasks`);\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des tâches:', error);\n      throw error;\n    }\n  },\n  \n  getTask: async (id) => {\n    try {\n      const response = await axios.get(`${API_URL}/tasks/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la récupération de la tâche ${id}:`, error);\n      throw error;\n    }\n  }\n};\n\nexport { authService, clientsService, tasksService, setAuthToken };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}