{"ast":null,"code":"import axios from'axios';import{store}from'../store';import{logout}from'../store/slices/authSlice';// Créer une instance axios avec la configuration de base\nconst api=axios.create({baseURL:process.env.REACT_APP_API_URL||'http://localhost:5000/api',headers:{'Content-Type':'application/json'}});// Intercepteur pour ajouter le token d'authentification à chaque requête\napi.interceptors.request.use(config=>{const state=store.getState();const token=state.auth.token;if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>Promise.reject(error));// Intercepteur pour gérer les erreurs d'authentification\napi.interceptors.response.use(response=>response,error=>{if(error.response&&error.response.status===401){store.dispatch(logout());}return Promise.reject(error);});// Services pour les différentes entités\nexport const authService={login:async(email,password)=>{const response=await api.post('/auth/login',{email,password});return response.data;},register:async(name,email,password)=>{const response=await api.post('/auth/register',{name,email,password});return response.data;},getCurrentUser:async()=>{const response=await api.get('/auth/me');return response.data;}};export const tasksService={getTasks:async()=>{const response=await api.get('/tasks');return response.data;},getTaskById:async id=>{const response=await api.get(`/tasks/${id}`);return response.data;},createTask:async taskData=>{const response=await api.post('/tasks',taskData);return response.data;},updateTask:async(id,taskData)=>{const response=await api.put(`/tasks/${id}`,taskData);return response.data;},deleteTask:async id=>{const response=await api.delete(`/tasks/${id}`);return response.data;}};export const clientsService={getClients:async()=>{const response=await api.get('/clients');return response.data;},getClientById:async id=>{const response=await api.get(`/clients/${id}`);return response.data;},createClient:async clientData=>{const response=await api.post('/clients',clientData);return response.data;},updateClient:async(id,clientData)=>{const response=await api.put(`/clients/${id}`,clientData);return response.data;},deleteClient:async id=>{const response=await api.delete(`/clients/${id}`);return response.data;}};export const gamificationService={getProfile:async()=>{const response=await api.get('/gamification/profile');return response.data;},getLevels:async()=>{const response=await api.get('/gamification/levels');return response.data;},getActivities:async(page,limit)=>{const response=await api.get(`/gamification/activities?page=${page}&limit=${limit}`);return response.data;},updateStreak:async()=>{const response=await api.post('/gamification/streak');return response.data;},// Ajout de méthodes manquantes\naddActionPoints:async(points,type,description)=>{const response=await api.post('/gamification/action-points',{points,type,description});return response.data;}};export const badgesService={getUserBadges:async()=>{const response=await api.get('/badges/user');return response.data;},getAllBadges:async()=>{const response=await api.get('/badges');return response.data;}};// Service Timer complet avec toutes les méthodes nécessaires\nexport const timerService={startTimer:async timerData=>{const response=await api.post('/timer/start',timerData);return response.data;},stopTimer:async(id,duration)=>{const response=await api.post(`/timer/stop/${id}`,{duration});return response.data;},getTimerHistory:async taskId=>{const response=await api.get(`/timer/history/${taskId}`);return response.data;},// Méthodes manquantes\ngetAllTimers:async()=>{const response=await api.get('/timer/all');return response.data;},getRunningTimer:async()=>{const response=await api.get('/timer/running');return response.data;},getTimerById:async id=>{const response=await api.get(`/timer/${id}`);return response.data;},pauseTimer:async id=>{const response=await api.post(`/timer/pause/${id}`);return response.data;},resumeTimer:async id=>{const response=await api.post(`/timer/resume/${id}`);return response.data;},deleteTimer:async id=>{const response=await api.delete(`/timer/${id}`);return response.data;},getClientTimers:async clientId=>{const response=await api.get(`/timer/client/${clientId}`);return response.data;},getTaskTimers:async taskId=>{const response=await api.get(`/timer/task/${taskId}`);return response.data;}};// Ajout des services manquants\nexport const taskImpactService={getHighImpactTasks:async()=>{const response=await api.get('/taskImpact/highImpact');return response.data;},updateTaskImpact:async(taskId,isHighImpact,impactScore)=>{const response=await api.put(`/taskImpact/${taskId}`,{isHighImpact,impactScore});return response.data;},analyzeTasksImpact:async()=>{const response=await api.post('/taskImpact/analyze');return response.data;},applyImpactAnalysis:async updatedTasks=>{const response=await api.post('/taskImpact/apply',{tasks:updatedTasks});return response.data;}};export const profitabilityService={getAllProfitability:async()=>{const response=await api.get('/profitability/all');return response.data;},getClientProfitability:async clientId=>{const response=await api.get(`/profitability/client/${clientId}`);return response.data;},updateHourlyRate:async(clientId,hourlyRate)=>{const response=await api.put(`/profitability/hourlyRate/${clientId}`,{hourlyRate});return response.data;},updateSpentHours:async(clientId,spentHours,incrementOnly)=>{const response=await api.put(`/profitability/spentHours/${clientId}`,{spentHours,incrementOnly});return response.data;},updateTargetHours:async(clientId,targetHours)=>{const response=await api.put(`/profitability/targetHours/${clientId}`,{targetHours});return response.data;},getGlobalProfitabilitySummary:async()=>{const response=await api.get('/profitability/summary');return response.data;},getClientTasks:async clientId=>{const response=await api.get(`/profitability/tasks/${clientId}`);return response.data;}};export const objectivesService={getAll:async()=>{const response=await api.get('/objectives');return response.data;},getById:async id=>{const response=await api.get(`/objectives/${id}`);return response.data;},getByClient:async clientId=>{const response=await api.get(`/objectives/client/${clientId}`);return response.data;},getHighImpact:async()=>{const response=await api.get('/objectives/highImpact');return response.data;},create:async objectiveData=>{const response=await api.post('/objectives',objectiveData);return response.data;},update:async(id,objectiveData)=>{const response=await api.put(`/objectives/${id}`,objectiveData);return response.data;},updateProgress:async(id,currentValue)=>{const response=await api.put(`/objectives/${id}/progress`,{currentValue});return response.data;},delete:async id=>{const response=await api.delete(`/objectives/${id}`);return response.data;},linkTask:async(objectiveId,taskId)=>{const response=await api.post(`/objectives/${objectiveId}/tasks/${taskId}`);return response.data;},unlinkTask:async(objectiveId,taskId)=>{const response=await api.delete(`/objectives/${objectiveId}/tasks/${taskId}`);return response.data;}};export default api;","map":{"version":3,"names":["axios","store","logout","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","request","use","config","state","getState","token","auth","Authorization","error","Promise","reject","response","status","dispatch","authService","login","email","password","post","data","register","name","getCurrentUser","get","tasksService","getTasks","getTaskById","id","createTask","taskData","updateTask","put","deleteTask","delete","clientsService","getClients","getClientById","createClient","clientData","updateClient","deleteClient","gamificationService","getProfile","getLevels","getActivities","page","limit","updateStreak","addActionPoints","points","type","description","badgesService","getUserBadges","getAllBadges","timerService","startTimer","timerData","stopTimer","duration","getTimerHistory","taskId","getAllTimers","getRunningTimer","getTimerById","pauseTimer","resumeTimer","deleteTimer","getClientTimers","clientId","getTaskTimers","taskImpactService","getHighImpactTasks","updateTaskImpact","isHighImpact","impactScore","analyzeTasksImpact","applyImpactAnalysis","updatedTasks","tasks","profitabilityService","getAllProfitability","getClientProfitability","updateHourlyRate","hourlyRate","updateSpentHours","spentHours","incrementOnly","updateTargetHours","targetHours","getGlobalProfitabilitySummary","getClientTasks","objectivesService","getAll","getById","getByClient","getHighImpact","objectiveData","update","updateProgress","currentValue","linkTask","objectiveId","unlinkTask"],"sources":["C:/Users/Steve/Documents/Dernier projet task manager/task-manager-complete-main (1)/task-manager-complete-main/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { store } from '../store';\nimport { logout } from '../store/slices/authSlice';\n\n// Créer une instance axios avec la configuration de base\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Intercepteur pour ajouter le token d'authentification à chaque requête\napi.interceptors.request.use(\n  (config) => {\n    const state = store.getState();\n    const token = state.auth.token;\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Intercepteur pour gérer les erreurs d'authentification\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response && error.response.status === 401) {\n      store.dispatch(logout());\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Services pour les différentes entités\nexport const authService = {\n  login: async (email: string, password: string) => {\n    const response = await api.post('/auth/login', { email, password });\n    return response.data;\n  },\n  register: async (name: string, email: string, password: string) => {\n    const response = await api.post('/auth/register', { name, email, password });\n    return response.data;\n  },\n  getCurrentUser: async () => {\n    const response = await api.get('/auth/me');\n    return response.data;\n  },\n};\n\nexport const tasksService = {\n  getTasks: async () => {\n    const response = await api.get('/tasks');\n    return response.data;\n  },\n  getTaskById: async (id: string) => {\n    const response = await api.get(`/tasks/${id}`);\n    return response.data;\n  },\n  createTask: async (taskData: any) => {\n    const response = await api.post('/tasks', taskData);\n    return response.data;\n  },\n  updateTask: async (id: string, taskData: any) => {\n    const response = await api.put(`/tasks/${id}`, taskData);\n    return response.data;\n  },\n  deleteTask: async (id: string) => {\n    const response = await api.delete(`/tasks/${id}`);\n    return response.data;\n  },\n};\n\nexport const clientsService = {\n  getClients: async () => {\n    const response = await api.get('/clients');\n    return response.data;\n  },\n  getClientById: async (id: string) => {\n    const response = await api.get(`/clients/${id}`);\n    return response.data;\n  },\n  createClient: async (clientData: any) => {\n    const response = await api.post('/clients', clientData);\n    return response.data;\n  },\n  updateClient: async (id: string, clientData: any) => {\n    const response = await api.put(`/clients/${id}`, clientData);\n    return response.data;\n  },\n  deleteClient: async (id: string) => {\n    const response = await api.delete(`/clients/${id}`);\n    return response.data;\n  },\n};\n\nexport const gamificationService = {\n  getProfile: async () => {\n    const response = await api.get('/gamification/profile');\n    return response.data;\n  },\n  getLevels: async () => {\n    const response = await api.get('/gamification/levels');\n    return response.data;\n  },\n  getActivities: async (page: number, limit: number) => {\n    const response = await api.get(`/gamification/activities?page=${page}&limit=${limit}`);\n    return response.data;\n  },\n  updateStreak: async () => {\n    const response = await api.post('/gamification/streak');\n    return response.data;\n  },\n  // Ajout de méthodes manquantes\n  addActionPoints: async (points: number, type: string, description: string) => {\n    const response = await api.post('/gamification/action-points', { points, type, description });\n    return response.data;\n  }\n};\n\nexport const badgesService = {\n  getUserBadges: async () => {\n    const response = await api.get('/badges/user');\n    return response.data;\n  },\n  getAllBadges: async () => {\n    const response = await api.get('/badges');\n    return response.data;\n  },\n};\n\n// Service Timer complet avec toutes les méthodes nécessaires\nexport const timerService = {\n  startTimer: async (timerData: any) => {\n    const response = await api.post('/timer/start', timerData);\n    return response.data;\n  },\n  stopTimer: async (id: string, duration?: number) => {\n    const response = await api.post(`/timer/stop/${id}`, { duration });\n    return response.data;\n  },\n  getTimerHistory: async (taskId: string) => {\n    const response = await api.get(`/timer/history/${taskId}`);\n    return response.data;\n  },\n  // Méthodes manquantes\n  getAllTimers: async () => {\n    const response = await api.get('/timer/all');\n    return response.data;\n  },\n  getRunningTimer: async () => {\n    const response = await api.get('/timer/running');\n    return response.data;\n  },\n  getTimerById: async (id: string) => {\n    const response = await api.get(`/timer/${id}`);\n    return response.data;\n  },\n  pauseTimer: async (id: string) => {\n    const response = await api.post(`/timer/pause/${id}`);\n    return response.data;\n  },\n  resumeTimer: async (id: string) => {\n    const response = await api.post(`/timer/resume/${id}`);\n    return response.data;\n  },\n  deleteTimer: async (id: string) => {\n    const response = await api.delete(`/timer/${id}`);\n    return response.data;\n  },\n  getClientTimers: async (clientId: string) => {\n    const response = await api.get(`/timer/client/${clientId}`);\n    return response.data;\n  },\n  getTaskTimers: async (taskId: string) => {\n    const response = await api.get(`/timer/task/${taskId}`);\n    return response.data;\n  }\n};\n\n// Ajout des services manquants\nexport const taskImpactService = {\n  getHighImpactTasks: async () => {\n    const response = await api.get('/taskImpact/highImpact');\n    return response.data;\n  },\n  updateTaskImpact: async (taskId: string, isHighImpact: boolean, impactScore: number) => {\n    const response = await api.put(`/taskImpact/${taskId}`, { isHighImpact, impactScore });\n    return response.data;\n  },\n  analyzeTasksImpact: async () => {\n    const response = await api.post('/taskImpact/analyze');\n    return response.data;\n  },\n  applyImpactAnalysis: async (updatedTasks: any[]) => {\n    const response = await api.post('/taskImpact/apply', { tasks: updatedTasks });\n    return response.data;\n  },\n};\n\nexport const profitabilityService = {\n  getAllProfitability: async () => {\n    const response = await api.get('/profitability/all');\n    return response.data;\n  },\n  getClientProfitability: async (clientId: string) => {\n    const response = await api.get(`/profitability/client/${clientId}`);\n    return response.data;\n  },\n  updateHourlyRate: async (clientId: string, hourlyRate: number) => {\n    const response = await api.put(`/profitability/hourlyRate/${clientId}`, { hourlyRate });\n    return response.data;\n  },\n  updateSpentHours: async (clientId: string, spentHours: number, incrementOnly?: boolean) => {\n    const response = await api.put(`/profitability/spentHours/${clientId}`, { spentHours, incrementOnly });\n    return response.data;\n  },\n  updateTargetHours: async (clientId: string, targetHours: number) => {\n    const response = await api.put(`/profitability/targetHours/${clientId}`, { targetHours });\n    return response.data;\n  },\n  getGlobalProfitabilitySummary: async () => {\n    const response = await api.get('/profitability/summary');\n    return response.data;\n  },\n  getClientTasks: async (clientId: string) => {\n    const response = await api.get(`/profitability/tasks/${clientId}`);\n    return response.data;\n  },\n};\n\nexport const objectivesService = {\n  getAll: async () => {\n    const response = await api.get('/objectives');\n    return response.data;\n  },\n  getById: async (id: string) => {\n    const response = await api.get(`/objectives/${id}`);\n    return response.data;\n  },\n  getByClient: async (clientId: string) => {\n    const response = await api.get(`/objectives/client/${clientId}`);\n    return response.data;\n  },\n  getHighImpact: async () => {\n    const response = await api.get('/objectives/highImpact');\n    return response.data;\n  },\n  create: async (objectiveData: any) => {\n    const response = await api.post('/objectives', objectiveData);\n    return response.data;\n  },\n  update: async (id: string, objectiveData: any) => {\n    const response = await api.put(`/objectives/${id}`, objectiveData);\n    return response.data;\n  },\n  updateProgress: async (id: string, currentValue: number) => {\n    const response = await api.put(`/objectives/${id}/progress`, { currentValue });\n    return response.data;\n  },\n  delete: async (id: string) => {\n    const response = await api.delete(`/objectives/${id}`);\n    return response.data;\n  },\n  linkTask: async (objectiveId: string, taskId: string) => {\n    const response = await api.post(`/objectives/${objectiveId}/tasks/${taskId}`);\n    return response.data;\n  },\n  unlinkTask: async (objectiveId: string, taskId: string) => {\n    const response = await api.delete(`/objectives/${objectiveId}/tasks/${taskId}`);\n    return response.data;\n  },\n};\n\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}