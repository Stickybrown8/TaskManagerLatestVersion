{"ast":null,"code":"import{configureStore,createSlice,createAsyncThunk}from'@reduxjs/toolkit';import{authService,clientsService,tasksService}from'./api';// Thunk pour la connexion\nexport const login=createAsyncThunk('auth/login',async(_ref,_ref2)=>{let{email,password}=_ref;let{rejectWithValue}=_ref2;try{const user=await authService.login(email,password);return user;}catch(error){var _error$response,_error$response$data;return rejectWithValue(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Erreur de connexion');}});// Thunk pour vérifier l'authentification\nexport const checkAuth=createAsyncThunk('auth/check',async(_,_ref3)=>{let{rejectWithValue}=_ref3;try{const user=await authService.checkAuth();return user;}catch(error){return rejectWithValue('Session expirée');}});// Slice d'authentification\nconst authSlice=createSlice({name:'auth',initialState:{isAuthenticated:false,user:null,loading:false,error:null},reducers:{logout:state=>{authService.logout();state.isAuthenticated=false;state.user=null;}},extraReducers:builder=>{builder.addCase(login.pending,state=>{state.loading=true;state.error=null;}).addCase(login.fulfilled,(state,action)=>{state.loading=false;state.isAuthenticated=true;state.user=action.payload;}).addCase(login.rejected,(state,action)=>{state.loading=false;state.error=action.payload;}).addCase(checkAuth.fulfilled,(state,action)=>{if(action.payload){state.isAuthenticated=true;state.user=action.payload;}});}});// Thunk pour récupérer les clients\nexport const fetchClients=createAsyncThunk('clients/fetchClients',async(_,_ref4)=>{let{rejectWithValue}=_ref4;try{const clients=await clientsService.getClients();return clients;}catch(error){var _error$response2,_error$response2$data;return rejectWithValue(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.message)||'Erreur lors de la récupération des clients');}});// Slice des clients\nconst clientsSlice=createSlice({name:'clients',initialState:{clients:[],loading:false,error:null},reducers:{},extraReducers:builder=>{builder.addCase(fetchClients.pending,state=>{state.loading=true;state.error=null;}).addCase(fetchClients.fulfilled,(state,action)=>{state.loading=false;state.clients=action.payload;}).addCase(fetchClients.rejected,(state,action)=>{state.loading=false;state.error=action.payload;});}});// Thunk pour récupérer les tâches\nexport const fetchTasks=createAsyncThunk('tasks/fetchTasks',async(_,_ref5)=>{let{rejectWithValue}=_ref5;try{const tasks=await tasksService.getTasks();return tasks;}catch(error){var _error$response3,_error$response3$data;return rejectWithValue(((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||'Erreur lors de la récupération des tâches');}});// Slice des tâches\nconst tasksSlice=createSlice({name:'tasks',initialState:{tasks:[],loading:false,error:null},reducers:{},extraReducers:builder=>{builder.addCase(fetchTasks.pending,state=>{state.loading=true;state.error=null;}).addCase(fetchTasks.fulfilled,(state,action)=>{state.loading=false;state.tasks=action.payload;}).addCase(fetchTasks.rejected,(state,action)=>{state.loading=false;state.error=action.payload;});}});// Export des actions\nexport const{logout}=authSlice.actions;// Store Redux avec les reducers\nexport const store=configureStore({reducer:{auth:authSlice.reducer,clients:clientsSlice.reducer,tasks:tasksSlice.reducer}});","map":{"version":3,"names":["configureStore","createSlice","createAsyncThunk","authService","clientsService","tasksService","login","_ref","_ref2","email","password","rejectWithValue","user","error","_error$response","_error$response$data","response","data","message","checkAuth","_","_ref3","authSlice","name","initialState","isAuthenticated","loading","reducers","logout","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","fetchClients","_ref4","clients","getClients","_error$response2","_error$response2$data","clientsSlice","fetchTasks","_ref5","tasks","getTasks","_error$response3","_error$response3$data","tasksSlice","actions","store","reducer","auth"],"sources":["C:/Users/Steve/Documents/Dernier projet task manager/task-manager-complete-main (1)/task-manager-complete-main/frontend/src/store.js"],"sourcesContent":["import { configureStore, createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { authService, clientsService, tasksService } from './api';\n\n// Thunk pour la connexion\nexport const login = createAsyncThunk(\n  'auth/login',\n  async ({ email, password }, { rejectWithValue }) => {\n    try {\n      const user = await authService.login(email, password);\n      return user;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'Erreur de connexion');\n    }\n  }\n);\n\n// Thunk pour vérifier l'authentification\nexport const checkAuth = createAsyncThunk(\n  'auth/check',\n  async (_, { rejectWithValue }) => {\n    try {\n      const user = await authService.checkAuth();\n      return user;\n    } catch (error) {\n      return rejectWithValue('Session expirée');\n    }\n  }\n);\n\n// Slice d'authentification\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    isAuthenticated: false,\n    user: null,\n    loading: false,\n    error: null\n  },\n  reducers: {\n    logout: (state) => {\n      authService.logout();\n      state.isAuthenticated = false;\n      state.user = null;\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(login.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.loading = false;\n        state.isAuthenticated = true;\n        state.user = action.payload;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      .addCase(checkAuth.fulfilled, (state, action) => {\n        if (action.payload) {\n          state.isAuthenticated = true;\n          state.user = action.payload;\n        }\n      });\n  }\n});\n\n// Thunk pour récupérer les clients\nexport const fetchClients = createAsyncThunk(\n  'clients/fetchClients',\n  async (_, { rejectWithValue }) => {\n    try {\n      const clients = await clientsService.getClients();\n      return clients;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'Erreur lors de la récupération des clients');\n    }\n  }\n);\n\n// Slice des clients\nconst clientsSlice = createSlice({\n  name: 'clients',\n  initialState: {\n    clients: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchClients.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchClients.fulfilled, (state, action) => {\n        state.loading = false;\n        state.clients = action.payload;\n      })\n      .addCase(fetchClients.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  }\n});\n\n// Thunk pour récupérer les tâches\nexport const fetchTasks = createAsyncThunk(\n  'tasks/fetchTasks',\n  async (_, { rejectWithValue }) => {\n    try {\n      const tasks = await tasksService.getTasks();\n      return tasks;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'Erreur lors de la récupération des tâches');\n    }\n  }\n);\n\n// Slice des tâches\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: {\n    tasks: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchTasks.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchTasks.fulfilled, (state, action) => {\n        state.loading = false;\n        state.tasks = action.payload;\n      })\n      .addCase(fetchTasks.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  }\n});\n\n// Export des actions\nexport const { logout } = authSlice.actions;\n\n// Store Redux avec les reducers\nexport const store = configureStore({\n  reducer: {\n    auth: authSlice.reducer,\n    clients: clientsSlice.reducer,\n    tasks: tasksSlice.reducer\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}