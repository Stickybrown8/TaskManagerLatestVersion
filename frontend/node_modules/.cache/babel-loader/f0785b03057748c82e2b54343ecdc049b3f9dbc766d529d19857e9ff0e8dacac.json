{"ast":null,"code":"import React from'react';import{Navigate,Outlet}from'react-router-dom';import{useAppSelector}from'../hooks';import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const PrivateRoute=_ref=>{let{children}=_ref;const{isAuthenticated,loading}=useAppSelector(state=>state.auth);// Si l'authentification est en cours de vérification, afficher un loader\nif(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-screen\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-600\"})});}// Si l'utilisateur n'est pas authentifié, rediriger vers la page de connexion\nif(!isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}// Si l'utilisateur est authentifié, rendre les enfants ou utiliser Outlet\nreturn children?/*#__PURE__*/_jsx(_Fragment,{children:children}):/*#__PURE__*/_jsx(Outlet,{});};export default PrivateRoute;","map":{"version":3,"names":["React","Navigate","Outlet","useAppSelector","jsx","_jsx","Fragment","_Fragment","PrivateRoute","_ref","children","isAuthenticated","loading","state","auth","className","to","replace"],"sources":["C:/Users/Steve/Documents/Dernier projet task manager/task-manager-complete-main (1)/task-manager-complete-main/frontend/src/components/PrivateRoute.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAppSelector } from '../hooks';\n\ninterface PrivateRouteProps {\n  children?: React.ReactNode;\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({ children }) => {\n  const { isAuthenticated, loading } = useAppSelector(state => state.auth);\n\n  // Si l'authentification est en cours de vérification, afficher un loader\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-600\"></div>\n      </div>\n    );\n  }\n\n  // Si l'utilisateur n'est pas authentifié, rediriger vers la page de connexion\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" replace />;\n  }\n\n  // Si l'utilisateur est authentifié, rendre les enfants ou utiliser Outlet\n  return children ? <>{children}</> : <Outlet />;\n};\n\nexport default PrivateRoute;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,MAAM,KAAQ,kBAAkB,CACnD,OAASC,cAAc,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAM1C,KAAM,CAAAC,YAAyC,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC7D,KAAM,CAAEE,eAAe,CAAEC,OAAQ,CAAC,CAAGT,cAAc,CAACU,KAAK,EAAIA,KAAK,CAACC,IAAI,CAAC,CAExE;AACA,GAAIF,OAAO,CAAE,CACX,mBACEP,IAAA,QAAKU,SAAS,CAAC,2CAA2C,CAAAL,QAAA,cACxDL,IAAA,QAAKU,SAAS,CAAC,8EAA8E,CAAM,CAAC,CACjG,CAAC,CAEV,CAEA;AACA,GAAI,CAACJ,eAAe,CAAE,CACpB,mBAAON,IAAA,CAACJ,QAAQ,EAACe,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA;AACA,MAAO,CAAAP,QAAQ,cAAGL,IAAA,CAAAE,SAAA,EAAAG,QAAA,CAAGA,QAAQ,CAAG,CAAC,cAAGL,IAAA,CAACH,MAAM,GAAE,CAAC,CAChD,CAAC,CAED,cAAe,CAAAM,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}