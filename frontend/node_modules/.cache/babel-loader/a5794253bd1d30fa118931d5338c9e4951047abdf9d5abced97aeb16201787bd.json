{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';// Types\n// État initial\nconst initialState={isAuthenticated:false,user:null,token:localStorage.getItem('token'),loading:false,error:null};// Slice\nconst authSlice=createSlice({name:'auth',initialState,reducers:{loginStart:state=>{state.loading=true;state.error=null;},loginSuccess:(state,action)=>{state.isAuthenticated=true;state.user=action.payload.user;state.token=action.payload.token;state.loading=false;state.error=null;localStorage.setItem('token',action.payload.token);},loginFailure:(state,action)=>{state.isAuthenticated=false;state.user=null;state.loading=false;state.error=action.payload;},logout:state=>{state.isAuthenticated=false;state.user=null;state.token=null;localStorage.removeItem('token');},updateUserProfile:(state,action)=>{if(state.user){state.user={...state.user,...action.payload};}},updateUserGamification:(state,action)=>{if(state.user&&state.user.gamification){state.user.gamification={...state.user.gamification,...action.payload};}}}});// Actions\nexport const{loginStart,loginSuccess,loginFailure,logout,updateUserProfile,updateUserGamification}=authSlice.actions;// Reducer\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isAuthenticated","user","token","localStorage","getItem","loading","error","authSlice","name","reducers","loginStart","state","loginSuccess","action","payload","setItem","loginFailure","logout","removeItem","updateUserProfile","updateUserGamification","gamification","actions","reducer"],"sources":["C:/Users/Steve/Documents/Dernier projet task manager/task-manager-complete-main (1)/task-manager-complete-main/frontend/src/store/slices/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\n// Types\ninterface AuthState {\n  isAuthenticated: boolean;\n  user: User | null;\n  token: string | null;\n  loading: boolean;\n  error: string | null;\n}\n\ninterface User {\n  id: string;\n  name: string;\n  email: string;\n  profile: {\n    avatar: string;\n    theme: string;\n    settings: {\n      notifications: boolean;\n      language: string;\n      soundEffects: boolean;\n    };\n  };\n  gamification: {\n    level: number;\n    experience: number;\n    actionPoints: number;\n    badges: any[];\n  };\n}\n\ninterface LoginPayload {\n  user: User;\n  token: string;\n}\n\n// État initial\nconst initialState: AuthState = {\n  isAuthenticated: false,\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: false,\n  error: null,\n};\n\n// Slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action: PayloadAction<LoginPayload>) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.loading = false;\n      state.error = null;\n      localStorage.setItem('token', action.payload.token);\n    },\n    loginFailure: (state, action: PayloadAction<string>) => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.loading = false;\n      state.error = action.payload;\n    },\n    logout: (state) => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n      localStorage.removeItem('token');\n    },\n    updateUserProfile: (state, action: PayloadAction<Partial<User>>) => {\n      if (state.user) {\n        state.user = { ...state.user, ...action.payload };\n      }\n    },\n    updateUserGamification: (state, action: PayloadAction<Partial<User['gamification']>>) => {\n      if (state.user && state.user.gamification) {\n        state.user.gamification = { ...state.user.gamification, ...action.payload };\n      }\n    },\n  },\n});\n\n// Actions\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  updateUserProfile,\n  updateUserGamification,\n} = authSlice.actions;\n\n// Reducer\nexport default authSlice.reducer;\n"],"mappings":"AAAA,OAASA,WAAW,KAAuB,kBAAkB,CAE7D;AAmCA;AACA,KAAM,CAAAC,YAAuB,CAAG,CAC9BC,eAAe,CAAE,KAAK,CACtBC,IAAI,CAAE,IAAI,CACVC,KAAK,CAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACpCC,OAAO,CAAE,KAAK,CACdC,KAAK,CAAE,IACT,CAAC,CAED;AACA,KAAM,CAAAC,SAAS,CAAGT,WAAW,CAAC,CAC5BU,IAAI,CAAE,MAAM,CACZT,YAAY,CACZU,QAAQ,CAAE,CACRC,UAAU,CAAGC,KAAK,EAAK,CACrBA,KAAK,CAACN,OAAO,CAAG,IAAI,CACpBM,KAAK,CAACL,KAAK,CAAG,IAAI,CACpB,CAAC,CACDM,YAAY,CAAEA,CAACD,KAAK,CAAEE,MAAmC,GAAK,CAC5DF,KAAK,CAACX,eAAe,CAAG,IAAI,CAC5BW,KAAK,CAACV,IAAI,CAAGY,MAAM,CAACC,OAAO,CAACb,IAAI,CAChCU,KAAK,CAACT,KAAK,CAAGW,MAAM,CAACC,OAAO,CAACZ,KAAK,CAClCS,KAAK,CAACN,OAAO,CAAG,KAAK,CACrBM,KAAK,CAACL,KAAK,CAAG,IAAI,CAClBH,YAAY,CAACY,OAAO,CAAC,OAAO,CAAEF,MAAM,CAACC,OAAO,CAACZ,KAAK,CAAC,CACrD,CAAC,CACDc,YAAY,CAAEA,CAACL,KAAK,CAAEE,MAA6B,GAAK,CACtDF,KAAK,CAACX,eAAe,CAAG,KAAK,CAC7BW,KAAK,CAACV,IAAI,CAAG,IAAI,CACjBU,KAAK,CAACN,OAAO,CAAG,KAAK,CACrBM,KAAK,CAACL,KAAK,CAAGO,MAAM,CAACC,OAAO,CAC9B,CAAC,CACDG,MAAM,CAAGN,KAAK,EAAK,CACjBA,KAAK,CAACX,eAAe,CAAG,KAAK,CAC7BW,KAAK,CAACV,IAAI,CAAG,IAAI,CACjBU,KAAK,CAACT,KAAK,CAAG,IAAI,CAClBC,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC,CAClC,CAAC,CACDC,iBAAiB,CAAEA,CAACR,KAAK,CAAEE,MAAoC,GAAK,CAClE,GAAIF,KAAK,CAACV,IAAI,CAAE,CACdU,KAAK,CAACV,IAAI,CAAG,CAAE,GAAGU,KAAK,CAACV,IAAI,CAAE,GAAGY,MAAM,CAACC,OAAQ,CAAC,CACnD,CACF,CAAC,CACDM,sBAAsB,CAAEA,CAACT,KAAK,CAAEE,MAAoD,GAAK,CACvF,GAAIF,KAAK,CAACV,IAAI,EAAIU,KAAK,CAACV,IAAI,CAACoB,YAAY,CAAE,CACzCV,KAAK,CAACV,IAAI,CAACoB,YAAY,CAAG,CAAE,GAAGV,KAAK,CAACV,IAAI,CAACoB,YAAY,CAAE,GAAGR,MAAM,CAACC,OAAQ,CAAC,CAC7E,CACF,CACF,CACF,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CACXJ,UAAU,CACVE,YAAY,CACZI,YAAY,CACZC,MAAM,CACNE,iBAAiB,CACjBC,sBACF,CAAC,CAAGb,SAAS,CAACe,OAAO,CAErB;AACA,cAAe,CAAAf,SAAS,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}