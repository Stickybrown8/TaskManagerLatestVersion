{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';// Types\n// État initial\nconst initialState={level:1,experience:0,actionPoints:0,totalPointsEarned:0,currentStreak:0,longestStreak:0,badges:[],activities:[],levels:[],loading:false,error:null,rewardAnimation:{show:false,type:null,data:null}};// Slice\nconst gamificationSlice=createSlice({name:'gamification',initialState,reducers:{fetchGamificationProfileStart:state=>{state.loading=true;state.error=null;},fetchGamificationProfileSuccess:(state,action)=>{return{...state,...action.payload,loading:false};},fetchGamificationProfileFailure:(state,action)=>{state.loading=false;state.error=action.payload;},fetchBadgesStart:state=>{state.loading=true;state.error=null;},fetchBadgesSuccess:(state,action)=>{state.badges=action.payload;state.loading=false;},fetchBadgesFailure:(state,action)=>{state.loading=false;state.error=action.payload;},fetchActivitiesStart:state=>{state.loading=true;state.error=null;},fetchActivitiesSuccess:(state,action)=>{state.activities=action.payload;state.loading=false;},fetchActivitiesFailure:(state,action)=>{state.loading=false;state.error=action.payload;},fetchLevelsStart:state=>{state.loading=true;state.error=null;},fetchLevelsSuccess:(state,action)=>{state.levels=action.payload;state.loading=false;},fetchLevelsFailure:(state,action)=>{state.loading=false;state.error=action.payload;},addExperienceStart:state=>{state.loading=true;state.error=null;},addExperienceSuccess:(state,action)=>{state.experience=action.payload.newExperience;state.level=action.payload.newLevel;state.loading=false;// Afficher l'animation de récompense si level up\nif(action.payload.levelUp){state.rewardAnimation={show:true,type:'level',data:{level:action.payload.newLevel}};}},addExperienceFailure:(state,action)=>{state.loading=false;state.error=action.payload;},addActionPointsStart:state=>{state.loading=true;state.error=null;},addActionPointsSuccess:(state,action)=>{state.actionPoints=action.payload.newActionPoints;state.totalPointsEarned=action.payload.totalPointsEarned;state.loading=false;// Afficher l'animation de récompense\nstate.rewardAnimation={show:true,type:'points',data:{points:action.payload.newActionPoints-state.actionPoints}};},addActionPointsFailure:(state,action)=>{state.loading=false;state.error=action.payload;},updateStreakStart:state=>{state.loading=true;state.error=null;},updateStreakSuccess:(state,action)=>{state.currentStreak=action.payload.currentStreak;state.longestStreak=action.payload.longestStreak;state.loading=false;},updateStreakFailure:(state,action)=>{state.loading=false;state.error=action.payload;},earnBadgeStart:state=>{state.loading=true;state.error=null;},earnBadgeSuccess:(state,action)=>{state.badges.push(action.payload);state.loading=false;// Afficher l'animation de récompense\nstate.rewardAnimation={show:true,type:'badge',data:action.payload};},earnBadgeFailure:(state,action)=>{state.loading=false;state.error=action.payload;},hideRewardAnimation:state=>{state.rewardAnimation.show=false;}}});// Actions\nexport const{fetchGamificationProfileStart,fetchGamificationProfileSuccess,fetchGamificationProfileFailure,fetchBadgesStart,fetchBadgesSuccess,fetchBadgesFailure,fetchActivitiesStart,fetchActivitiesSuccess,fetchActivitiesFailure,fetchLevelsStart,fetchLevelsSuccess,fetchLevelsFailure,addExperienceStart,addExperienceSuccess,addExperienceFailure,addActionPointsStart,addActionPointsSuccess,addActionPointsFailure,updateStreakStart,updateStreakSuccess,updateStreakFailure,earnBadgeStart,earnBadgeSuccess,earnBadgeFailure,hideRewardAnimation}=gamificationSlice.actions;// Reducer\nexport default gamificationSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","level","experience","actionPoints","totalPointsEarned","currentStreak","longestStreak","badges","activities","levels","loading","error","rewardAnimation","show","type","data","gamificationSlice","name","reducers","fetchGamificationProfileStart","state","fetchGamificationProfileSuccess","action","payload","fetchGamificationProfileFailure","fetchBadgesStart","fetchBadgesSuccess","fetchBadgesFailure","fetchActivitiesStart","fetchActivitiesSuccess","fetchActivitiesFailure","fetchLevelsStart","fetchLevelsSuccess","fetchLevelsFailure","addExperienceStart","addExperienceSuccess","newExperience","newLevel","levelUp","addExperienceFailure","addActionPointsStart","addActionPointsSuccess","newActionPoints","points","addActionPointsFailure","updateStreakStart","updateStreakSuccess","updateStreakFailure","earnBadgeStart","earnBadgeSuccess","push","earnBadgeFailure","hideRewardAnimation","actions","reducer"],"sources":["C:/Users/Steve/Documents/Dernier projet task manager/task-manager-complete-main (1)/task-manager-complete-main/frontend/src/store/slices/gamificationSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\n// Types\ninterface GamificationState {\n  level: number;\n  experience: number;\n  actionPoints: number;\n  totalPointsEarned: number;\n  currentStreak: number;\n  longestStreak: number;\n  badges: Badge[];\n  activities: Activity[];\n  levels: Level[];\n  loading: boolean;\n  error: string | null;\n  rewardAnimation: {\n    show: boolean;\n    type: 'experience' | 'badge' | 'level' | 'points' | null;\n    data: any;\n  };\n}\n\ninterface Badge {\n  _id: string;\n  name: string;\n  description: string;\n  category: string;\n  level: number;\n  icon: string;\n  rarity: 'commun' | 'rare' | 'épique' | 'légendaire';\n  earnedAt?: string;\n  displayed?: boolean;\n}\n\ninterface Activity {\n  _id: string;\n  type: string;\n  description: string;\n  timestamp: string;\n  details: {\n    taskId?: string;\n    clientId?: string;\n    badgeId?: string;\n    pointsEarned?: number;\n    experienceEarned?: number;\n    levelUp?: boolean;\n  };\n}\n\ninterface Level {\n  _id: string;\n  level: number;\n  name: string;\n  experienceRequired: number;\n  rewards: {\n    actionPoints: number;\n    features: string[];\n    themes: string[];\n    avatars: string[];\n  };\n  icon: string;\n}\n\n// État initial\nconst initialState: GamificationState = {\n  level: 1,\n  experience: 0,\n  actionPoints: 0,\n  totalPointsEarned: 0,\n  currentStreak: 0,\n  longestStreak: 0,\n  badges: [],\n  activities: [],\n  levels: [],\n  loading: false,\n  error: null,\n  rewardAnimation: {\n    show: false,\n    type: null,\n    data: null,\n  },\n};\n\n// Slice\nconst gamificationSlice = createSlice({\n  name: 'gamification',\n  initialState,\n  reducers: {\n    fetchGamificationProfileStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchGamificationProfileSuccess: (state, action: PayloadAction<Partial<GamificationState>>) => {\n      return {\n        ...state,\n        ...action.payload,\n        loading: false,\n      };\n    },\n    fetchGamificationProfileFailure: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    fetchBadgesStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchBadgesSuccess: (state, action: PayloadAction<Badge[]>) => {\n      state.badges = action.payload;\n      state.loading = false;\n    },\n    fetchBadgesFailure: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    fetchActivitiesStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchActivitiesSuccess: (state, action: PayloadAction<Activity[]>) => {\n      state.activities = action.payload;\n      state.loading = false;\n    },\n    fetchActivitiesFailure: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    fetchLevelsStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchLevelsSuccess: (state, action: PayloadAction<Level[]>) => {\n      state.levels = action.payload;\n      state.loading = false;\n    },\n    fetchLevelsFailure: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    addExperienceStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    addExperienceSuccess: (state, action: PayloadAction<{\n      newExperience: number;\n      newLevel: number;\n      levelUp: boolean;\n    }>) => {\n      state.experience = action.payload.newExperience;\n      state.level = action.payload.newLevel;\n      state.loading = false;\n      \n      // Afficher l'animation de récompense si level up\n      if (action.payload.levelUp) {\n        state.rewardAnimation = {\n          show: true,\n          type: 'level',\n          data: {\n            level: action.payload.newLevel,\n          },\n        };\n      }\n    },\n    addExperienceFailure: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    addActionPointsStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    addActionPointsSuccess: (state, action: PayloadAction<{\n      newActionPoints: number;\n      totalPointsEarned: number;\n    }>) => {\n      state.actionPoints = action.payload.newActionPoints;\n      state.totalPointsEarned = action.payload.totalPointsEarned;\n      state.loading = false;\n      \n      // Afficher l'animation de récompense\n      state.rewardAnimation = {\n        show: true,\n        type: 'points',\n        data: {\n          points: action.payload.newActionPoints - state.actionPoints,\n        },\n      };\n    },\n    addActionPointsFailure: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    updateStreakStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    updateStreakSuccess: (state, action: PayloadAction<{\n      currentStreak: number;\n      longestStreak: number;\n    }>) => {\n      state.currentStreak = action.payload.currentStreak;\n      state.longestStreak = action.payload.longestStreak;\n      state.loading = false;\n    },\n    updateStreakFailure: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    earnBadgeStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    earnBadgeSuccess: (state, action: PayloadAction<Badge>) => {\n      state.badges.push(action.payload);\n      state.loading = false;\n      \n      // Afficher l'animation de récompense\n      state.rewardAnimation = {\n        show: true,\n        type: 'badge',\n        data: action.payload,\n      };\n    },\n    earnBadgeFailure: (state, action: PayloadAction<string>) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    hideRewardAnimation: (state) => {\n      state.rewardAnimation.show = false;\n    },\n  },\n});\n\n// Actions\nexport const {\n  fetchGamificationProfileStart,\n  fetchGamificationProfileSuccess,\n  fetchGamificationProfileFailure,\n  fetchBadgesStart,\n  fetchBadgesSuccess,\n  fetchBadgesFailure,\n  fetchActivitiesStart,\n  fetchActivitiesSuccess,\n  fetchActivitiesFailure,\n  fetchLevelsStart,\n  fetchLevelsSuccess,\n  fetchLevelsFailure,\n  addExperienceStart,\n  addExperienceSuccess,\n  addExperienceFailure,\n  addActionPointsStart,\n  addActionPointsSuccess,\n  addActionPointsFailure,\n  updateStreakStart,\n  updateStreakSuccess,\n  updateStreakFailure,\n  earnBadgeStart,\n  earnBadgeSuccess,\n  earnBadgeFailure,\n  hideRewardAnimation,\n} = gamificationSlice.actions;\n\n// Reducer\nexport default gamificationSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}